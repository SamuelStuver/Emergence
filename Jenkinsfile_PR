pipeline {
    agent any
    environment {
    DOCKER_BUILDKIT=1
    }
    options {
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    stages {
        stage('Build') {
            steps {
                sh "docker build -t sjournal-docker-localpublish -f Dockerfile_test --build-arg TEST_ENV=local_publish ."
            }
        }
        stage('Test') {
            steps {
                // Run Tests
                sh 'mkdir -p reports'
                // sh 'docker run -t -v $WORKSPACE/reports:/app/reports sjournal-docker-localpublish python -m pytest --color=yes --test_environment=local_publish'
            }
        }
    }
    post {
        always {
            sh "ls"
            sh "ls reports"

            sh "if [ $BRANCH_NAME ];        then echo BRANCH_NAME:        $BRANCH_NAME ;        else echo BRANCH_NAME:        NOT SET ; fi"
            sh "if [ $BRANCH_IS_PRIMARY ];  then echo BRANCH_IS_PRIMARY:  $BRANCH_IS_PRIMARY ;  else echo BRANCH_IS_PRIMARY:  NOT SET ; fi"
            sh "if [ $CHANGE_ID ];          then echo CHANGE_ID:          $CHANGE_ID ;          else echo CHANGE_ID:          NOT SET ; fi"
            sh "if [ $CHANGE_TITLE ];       then echo CHANGE_TITLE:       $CHANGE_TITLE ;       else echo CHANGE_TITLE:       NOT SET ; fi"
            sh "if [ $CHANGE_TARGET ];      then echo CHANGE_TARGET:      $CHANGE_TARGET ;      else echo CHANGE_TARGET:      NOT SET ; fi"
            sh "if [ $CHANGE_BRANCH ];      then echo CHANGE_BRANCH:      $CHANGE_BRANCH ;      else echo CHANGE_BRANCH:      NOT SET ; fi"
            sh "if [ $BUILD_NUMBER ];       then echo BUILD_NUMBER:       $BUILD_NUMBER ;       else echo BUILD_NUMBER:       NOT SET ; fi"
            sh "if [ $BUILD_DISPLAY_NAME ]; then echo BUILD_DISPLAY_NAME: $BUILD_DISPLAY_NAME ; else echo BUILD_DISPLAY_NAME: NOT SET ; fi"
            sh "if [ $JOB_NAME ];           then echo JOB_NAME:           $JOB_NAME ;           else echo JOB_NAME:           NOT SET ; fi"
            sh "if [ $JOB_BASE_NAME ];      then echo JOB_BASE_NAME:      $JOB_BASE_NAME ;      else echo JOB_BASE_NAME:      NOT SET ; fi"

            sh "echo RUNNING JUNIT PLUGIN"
            withChecks('Pytest Execution - Local Publish') {
                junit (
                    testResults: 'reports/report.xml',
                    keepLongStdio: true,
                )
            }
            publishHTML (target : [allowMissing: false,
                        alwaysLinkToLastBuild: true,
                        keepAll: false,
                        reportDir: 'reports',
                        reportFiles: 'report.html',
                        reportName: 'Pytest Report'])

            // Remove all exited containers and volumes
            sh "docker ps -a -q --filter ancestor=sjournal-docker-localpublish | xargs docker stop"
            sh "docker ps -a -q --filter ancestor=sjournal-docker-localpublish | xargs docker rm"
            // sh "docker system prune --force -a --volumes"
        }
        failure {
            sh "echo TODO: Do something on Failure"
        }
    }
}