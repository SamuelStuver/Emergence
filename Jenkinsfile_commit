pipeline {
    agent any
    environment {
    DOCKER_BUILDKIT=1
    }
    options {
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    stages {
        stage('Build') {
            steps {
                sh "docker build -t sjournal-docker-localrepo -f Dockerfile_test --build-arg TEST_ENV=local_repo ."
            }
        }
        stage('Test') {
            steps {
                // Run Tests
                sh 'mkdir -p reports'
                sh 'docker run -t -v $WORKSPACE/reports:/app/reports sjournal-docker-localrepo python -m pytest --color=yes --test_environment=local_repo'
            }
        }
    }
    post {
        always {
            sh "ls"
            sh "ls reports"
            sh "echo RUNNING JUNIT PLUGIN"
            junit 'reports/report.xml'
            publishHTML (target : [allowMissing: false,
                        alwaysLinkToLastBuild: true,
                        keepAll: false,
                        reportDir: 'reports',
                        reportFiles: 'report.html',
                        reportName: 'Pytest Report'])

            // Remove all exited containers and volumes
            sh "docker ps -a -q --filter ancestor=sjournal-docker-localrepo | xargs docker stop"
            sh "docker ps -a -q --filter ancestor=sjournal-docker-localrepo | xargs docker rm"
            // sh "docker system prune --force -a --volumes"
        }
        failure {
            sh "echo TODO: Do something on Failure"
        }
    }
}