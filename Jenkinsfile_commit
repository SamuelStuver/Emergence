pipeline {
    agent any
    environment {
    DOCKER_BUILDKIT=1
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }
    stages {
        stage('Build') {
            steps {
                sh "docker build -t sjournal-docker --build-arg TEST_ENV=local_repo ."
            }
        }
        stage('Test') {
            steps {
                // Run Tests
                sh 'docker run sjournal-docker --test_environment=local_repo'
            }
        }
        stage('Compile Reports') {
            steps {
                // Compile reports
                script {
                    env.LATEST_DOCKER_ID = sh(script:'docker ps --latest --quiet', returnStdout: true).trim()
                    echo "LATEST_DOCKER_ID = ${env.LATEST_DOCKER_ID}"
                    sh 'echo $LATEST_DOCKER_ID'
                }
                sh "mkdir -p reports"
                sh "docker cp $LATEST_DOCKER_ID:app/reports/report.html ./reports"
                sh "docker cp $LATEST_DOCKER_ID:app/reports/report.xml ./reports"
                sh "docker cp $LATEST_DOCKER_ID:app/reports/test_log.log ./reports"
            }
        }
    }
    post {
        always {
            sh "ls"
            sh "ls reports"
            sh "echo RUNNING JUNIT PLUGIN"
            withChecks('Integration Tests') {
                junit 'reports/report.xml'
            }
            // Remove all exited containers
            sh "docker ps -a -q -f status=exited | xargs docker rm"
        }
        failure {
            sh "echo Do something on Failure"
        }
    }
}